// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_array from "bs-platform/lib/es6/caml_array.js";
import * as Card$BtsCore from "../../material-ui/core/Card/Card.bs.js";
import * as Data$BtsCore from "../../features/Data.bs.js";
import * as Icons$BtsCore from "../../material-ui/icon/Icons.bs.js";
import * as Image$BtsCore from "../../example/Medias/Image.bs.js";
import * as Avatar$BtsCore from "../../material-ui/core/Avatar/Avatar.bs.js";
import * as Status$BtsCore from "../../features/Status.bs.js";
import * as Axiosapi$BtsCore from "../../features/Axiosapi.bs.js";
import * as GridItem$BtsCore from "../../material-ui/core/Grid/GridItem.bs.js";
import * as Together$BtsCore from "../../styles/Together/Together.bs.js";
import * as ReasonReactRouter from "reason-react/src/ReasonReactRouter.js";
import * as IconAction$BtsCore from "../../material-ui/core/IconStyle/IconAction.bs.js";
import * as IconButton$BtsCore from "../../material-ui/core/IconButton/IconButton.bs.js";
import * as Typography$BtsCore from "../../material-ui/core/Typography/Typography.bs.js";
import * as NewFacetube$BtsCore from "../../example/Facebook/NewFacetube.bs.js";
import * as BottomScroll$BtsCore from "../../example/ScrollBar/BottomScroll.bs.js";
import * as GridContainer$BtsCore from "../../material-ui/core/Grid/GridContainer.bs.js";

((require('../../../scss/pages/Together/together.scss')));

function reducer(state, action) {
  if (typeof action === "number") {
    if (action === /* SettingError */0) {
      return {
              formLoad: state.formLoad,
              formWidth: state.formWidth,
              formHeight: state.formHeight,
              showProgress: state.showProgress,
              error: !state.error,
              insert: state.insert,
              update: state.update,
              delete: state.delete,
              export: state.export,
              formId: state.formId,
              showItem: state.showItem,
              itemCount: state.itemCount,
              items: state.items,
              showYoutube: state.showYoutube,
              youtubeText: state.youtubeText
            };
    } else {
      return {
              formLoad: state.formLoad,
              formWidth: state.formWidth,
              formHeight: state.formHeight,
              showProgress: !state.showProgress,
              error: state.error,
              insert: state.insert,
              update: state.update,
              delete: state.delete,
              export: state.export,
              formId: state.formId,
              showItem: state.showItem,
              itemCount: state.itemCount,
              items: state.items,
              showYoutube: state.showYoutube,
              youtubeText: state.youtubeText
            };
    }
  }
  switch (action.tag | 0) {
    case /* SettingFormLoad */0 :
        return {
                formLoad: !state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: action[0],
                showItem: state.showItem,
                itemCount: state.itemCount,
                items: state.items,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* SettingFormWidth */1 :
        return {
                formLoad: state.formLoad,
                formWidth: action[0],
                formHeight: action[1],
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                showItem: state.showItem,
                itemCount: state.itemCount,
                items: state.items,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ActionPermissItems */2 :
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: action[0],
                update: action[1],
                delete: action[2],
                export: action[3],
                formId: state.formId,
                showItem: state.showItem,
                itemCount: state.itemCount,
                items: state.items,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* SettingFormItems */3 :
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                showItem: action[0],
                itemCount: action[1],
                items: action[2],
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* SettingScrollItems */4 :
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                showItem: action[0],
                itemCount: state.itemCount,
                items: $$Array.append(state.items, action[1]),
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ShowCollections */5 :
        var index = action[1];
        var collectionIndex = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                showItem: state.showItem,
                itemCount: state.itemCount,
                items: $$Array.mapi((function (i, item) {
                        if (index === i) {
                          return {
                                  id: item.id,
                                  index: collectionIndex,
                                  collections: item.collections,
                                  tile: item.tile,
                                  creator: item.creator,
                                  datetime: item.datetime,
                                  itemDelete: item.itemDelete
                                };
                        } else {
                          return item;
                        }
                      }), state.items),
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ClearForm */6 :
        var id = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.itemCount === 1,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                showItem: state.showItem,
                itemCount: state.itemCount - 1 | 0,
                items: state.items.filter((function (item) {
                        return item.id !== id;
                      })),
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ActionSnackBar */7 :
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                showItem: state.showItem,
                itemCount: state.itemCount,
                items: state.items,
                showYoutube: action[1],
                youtubeText: action[0]
              };
    
  }
}

var initialState_items = [];

var initialState = {
  formLoad: false,
  formWidth: 0,
  formHeight: 0,
  showProgress: true,
  error: false,
  insert: false,
  update: false,
  delete: false,
  export: false,
  formId: "",
  showItem: false,
  itemCount: 0,
  items: initialState_items,
  showYoutube: false,
  youtubeText: ""
};

var positionRelative = {
  position: "relative"
};

var outsideCollections = {
  position: "absolute",
  top: "100%",
  zIndex: "1",
  transform: "translate(0, -150%)"
};

var insideCollections = {
  position: "absolute",
  top: "50%",
  zIndex: "1",
  transform: "translate(0px, -50%)"
};

function displayStyle(showDisplay) {
  if (showDisplay) {
    return "block";
  } else {
    return "none";
  }
}

function Search(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var barShowRestoreAction = function (youtubeText) {
    Curry._1(dispatch, /* ActionSnackBar */Block.__(7, [
            youtubeText,
            true
          ]));
    setTimeout((function (param) {
            return Curry._1(dispatch, /* ActionSnackBar */Block.__(7, [
                          "",
                          false
                        ]));
          }), 5000);
    
  };
  var searchAJax = function (formId) {
    Axiosapi$BtsCore.Search.search(Data$BtsCore.sRowsData(formId, String(state.items.length), localStorage.getItem("newid"))).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* SettingFormItems */Block.__(3, [
                        response.data.showItem,
                        response.data.itemCount,
                        response.data.items
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              } else {
                Curry._1(dispatch, /* SettingError */0);
                barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var permissAJax = function (param) {
    Axiosapi$BtsCore.Form.permiss(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              return Promise.resolve((Curry._1(dispatch, /* ActionPermissItems */Block.__(2, [
                                  response.data.insert,
                                  response.data.update,
                                  response.data.delete,
                                  response.data.export
                                ])), searchAJax(ReasonReactRouter.dangerouslyGetInitialUrl(undefined).hash)));
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  React.useEffect((function () {
          var match = state.formLoad;
          if (match) {
            return (function (param) {
                      console.log("action");
                      
                    });
          }
          Curry._1(dispatch, /* SettingFormLoad */Block.__(0, [ReasonReactRouter.dangerouslyGetInitialUrl(undefined).hash]));
          Curry._1(dispatch, /* SettingFormWidth */Block.__(1, [
                  window.innerWidth,
                  window.innerHeight
                ]));
          var timeId = permissAJax(undefined);
          return (function (param) {
                    return timeId;
                  });
        }));
  var handleResize = function ($$event) {
    return Curry._1(dispatch, /* SettingFormWidth */Block.__(1, [
                  $$event.currentTarget.innerWidth,
                  $$event.currentTarget.innerHeight
                ]));
  };
  React.useEffect((function () {
          var watchId = ReasonReactRouter.watchUrl((function (url) {
                  Curry._1(dispatch, /* SettingFormLoad */Block.__(0, [ReasonReactRouter.dangerouslyGetInitialUrl(undefined).hash]));
                  return Curry._1(dispatch, /* ActionShowProgress */1);
                }));
          window.addEventListener("resize", handleResize, true);
          return (function (param) {
                    ReasonReactRouter.unwatchUrl(watchId);
                    
                  });
        }), ([]));
  var clickScrollBar = React.useCallback((function (param) {
          return Curry._1(dispatch, /* ActionShowProgress */1);
        }));
  var showPreviousCollections = React.useCallback((function (id) {
          return (function (index, $$event) {
              $$event.preventDefault();
              $$event.stopPropagation();
              var length = Caml_array.caml_array_get(state.items, index).collections.length - 1 | 0;
              var collectionIndex = id === 0 ? length : id - 1 | 0;
              return Curry._1(dispatch, /* ShowCollections */Block.__(5, [
                            collectionIndex,
                            index
                          ]));
            });
        }));
  var showNextCollections = React.useCallback((function (id) {
          return (function (index, $$event) {
              $$event.preventDefault();
              $$event.stopPropagation();
              var length = Caml_array.caml_array_get(state.items, index).collections.length - 1 | 0;
              var collectionIndex = id === length ? 0 : id + 1 | 0;
              return Curry._1(dispatch, /* ShowCollections */Block.__(5, [
                            collectionIndex,
                            index
                          ]));
            });
        }));
  var clickFormBoard = React.useCallback((function (id) {
          return Curry._1(dispatch, /* ActionShowProgress */1);
        }));
  var editForm = React.useCallback((function (i) {
          return (function (id, $$event) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ActionShowProgress */1);
            });
        }));
  var deleteForm = React.useCallback((function (id) {
          return (function ($$event) {
              $$event.preventDefault();
              $$event.stopPropagation();
              Curry._1(dispatch, /* ActionShowProgress */1);
              Axiosapi$BtsCore.Default.$$delete(Data$BtsCore.dFormData(id, localStorage.getItem("newid"))).then((function (response) {
                        var match = response.data.status;
                        var tmp;
                        if (match === "istrue") {
                          Curry._1(dispatch, /* ClearForm */Block.__(6, [id]));
                          barShowRestoreAction(Status$BtsCore.statusModule("deleteSuccess"));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */1);
                        } else {
                          barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */1);
                        }
                        return Promise.resolve(tmp);
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  return React.createElement(React.Fragment, undefined, React.createElement(NewFacetube$BtsCore.make, {
                  showProgress: state.showProgress,
                  error: state.error,
                  children: React.createElement(GridItem$BtsCore.make, {
                        style: Together$BtsCore.marginAuto,
                        top: "0",
                        right: "32",
                        bottom: "0",
                        left: "32",
                        xs: "12",
                        children: null
                      }, React.createElement(GridContainer$BtsCore.make, {
                            direction: "column",
                            justify: "center",
                            alignItem: "stretch",
                            children: React.createElement(GridItem$BtsCore.make, {
                                  right: "24",
                                  bottom: "0",
                                  left: "24",
                                  xs: "auto",
                                  children: React.createElement(GridContainer$BtsCore.make, {
                                        direction: "row",
                                        justify: "start",
                                        alignItem: "center",
                                        children: $$Array.mapi((function (i, item) {
                                                return React.createElement("div", {
                                                            onClick: (function (param) {
                                                                return Curry._1(clickFormBoard, item.id);
                                                              })
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                style: {
                                                                  height: "250px",
                                                                  marginRight: "12px"
                                                                },
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                width: "276px",
                                                                cursor: "pointer",
                                                                enterBorderWidth: "2",
                                                                borderWidth: "2",
                                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                                enterBorderRadius: "4",
                                                                borderRadius: "1",
                                                                xs: "no",
                                                                children: React.createElement(Card$BtsCore.make, {
                                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                                            direction: "column",
                                                                            justify: "center",
                                                                            alignItem: "stretch",
                                                                            children: null
                                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                                style: Object.assign(({}), positionRelative, {
                                                                                      height: "159px"
                                                                                    }),
                                                                                top: "0",
                                                                                right: "0",
                                                                                bottom: "0",
                                                                                left: "0",
                                                                                width: "276px",
                                                                                xs: "no",
                                                                                children: React.createElement(GridContainer$BtsCore.make, {
                                                                                      direction: "row",
                                                                                      justify: "center",
                                                                                      alignItem: "center",
                                                                                      children: null
                                                                                    }, React.createElement(GridItem$BtsCore.make, {
                                                                                          top: "0",
                                                                                          right: "0",
                                                                                          bottom: "0",
                                                                                          left: "0",
                                                                                          xs: "no",
                                                                                          children: React.createElement("div", {
                                                                                                style: Object.assign(({}), outsideCollections, {
                                                                                                      left: "0"
                                                                                                    })
                                                                                              }, React.createElement(IconButton$BtsCore.make, {
                                                                                                    padding: "6",
                                                                                                    disabled: state.showProgress,
                                                                                                    onClick: (function ($$event) {
                                                                                                        return Curry._3(showPreviousCollections, item.index, i, $$event);
                                                                                                      }),
                                                                                                    children: React.createElement(IconAction$BtsCore.make, {
                                                                                                          animation: "leftRight",
                                                                                                          src: Icons$BtsCore.arrowBackIosBlack
                                                                                                        })
                                                                                                  }))
                                                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                                                          style: {
                                                                                            height: "155px"
                                                                                          },
                                                                                          top: "0",
                                                                                          right: "0",
                                                                                          bottom: "0",
                                                                                          left: "0",
                                                                                          xs: "auto",
                                                                                          children: $$Array.mapi((function (ci, collitem) {
                                                                                                  return React.createElement("div", {
                                                                                                              style: {
                                                                                                                display: item.index === ci ? "block" : "none",
                                                                                                                height: "155px",
                                                                                                                left: "50%",
                                                                                                                position: "absolute",
                                                                                                                transform: "translate(-50%, 0)"
                                                                                                              }
                                                                                                            }, React.createElement(Image$BtsCore.make, {
                                                                                                                  width: "auto",
                                                                                                                  height: "100%",
                                                                                                                  borderRadius: "6",
                                                                                                                  src: "data:image/jpg;base64," + collitem
                                                                                                                }));
                                                                                                }), item.collections)
                                                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                                                          top: "0",
                                                                                          right: "0",
                                                                                          bottom: "0",
                                                                                          left: "0",
                                                                                          xs: "no",
                                                                                          children: React.createElement("div", {
                                                                                                style: Object.assign(({}), outsideCollections, {
                                                                                                      right: "0"
                                                                                                    })
                                                                                              }, React.createElement(IconButton$BtsCore.make, {
                                                                                                    padding: "6",
                                                                                                    disabled: state.showProgress,
                                                                                                    onClick: (function ($$event) {
                                                                                                        return Curry._3(showNextCollections, item.index, i, $$event);
                                                                                                      }),
                                                                                                    children: React.createElement(IconAction$BtsCore.make, {
                                                                                                          animation: "leftRight",
                                                                                                          src: Icons$BtsCore.arrowForwardIosBlack
                                                                                                        })
                                                                                                  }))
                                                                                        }))
                                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                                bottom: "0",
                                                                                left: "16",
                                                                                xs: "auto",
                                                                                children: React.createElement(GridContainer$BtsCore.make, {
                                                                                      direction: "row",
                                                                                      justify: "center",
                                                                                      alignItem: "start",
                                                                                      children: null
                                                                                    }, React.createElement(GridItem$BtsCore.make, {
                                                                                          top: "0",
                                                                                          right: "0",
                                                                                          bottom: "0",
                                                                                          left: "0",
                                                                                          xs: "no",
                                                                                          children: React.createElement(Avatar$BtsCore.make, {
                                                                                                top: "0",
                                                                                                right: "12",
                                                                                                bottom: "0",
                                                                                                left: "0",
                                                                                                color: "#909090",
                                                                                                enterBorderColor: "transparent",
                                                                                                downBorderColor: "transparent",
                                                                                                backgroundColor: "rgba(0,0,0,0.08)",
                                                                                                children: item.creator
                                                                                              })
                                                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                                                          top: "0",
                                                                                          right: "0",
                                                                                          bottom: "0",
                                                                                          left: "0",
                                                                                          xs: "auto",
                                                                                          children: React.createElement(GridContainer$BtsCore.make, {
                                                                                                direction: "column",
                                                                                                justify: "center",
                                                                                                alignItem: "stretch",
                                                                                                children: null
                                                                                              }, React.createElement(GridItem$BtsCore.make, {
                                                                                                    top: "0",
                                                                                                    right: "0",
                                                                                                    bottom: "3",
                                                                                                    left: "0",
                                                                                                    xs: "auto",
                                                                                                    children: React.createElement(Typography$BtsCore.make, {
                                                                                                          variant: "subheading",
                                                                                                          noWrap: true,
                                                                                                          children: item.tile
                                                                                                        })
                                                                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                                                                    top: "0",
                                                                                                    right: "0",
                                                                                                    bottom: "0",
                                                                                                    left: "0",
                                                                                                    xs: "auto",
                                                                                                    children: React.createElement(Typography$BtsCore.make, {
                                                                                                          variant: "caption",
                                                                                                          color: "#606060",
                                                                                                          children: item.datetime
                                                                                                        })
                                                                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                                                                    style: positionRelative,
                                                                                                    top: "0",
                                                                                                    right: "0",
                                                                                                    bottom: "0",
                                                                                                    left: "0",
                                                                                                    xs: "auto",
                                                                                                    children: null
                                                                                                  }, state.update ? React.createElement("div", {
                                                                                                          style: {
                                                                                                            bottom: "-100%",
                                                                                                            position: "absolute",
                                                                                                            right: "50%",
                                                                                                            transform: "translate(50px, 20px)"
                                                                                                          }
                                                                                                        }, React.createElement(IconButton$BtsCore.make, {
                                                                                                              padding: "6",
                                                                                                              disabled: state.showProgress,
                                                                                                              onClick: (function ($$event) {
                                                                                                                  return Curry._3(editForm, i, item.id, $$event);
                                                                                                                }),
                                                                                                              children: React.createElement(IconAction$BtsCore.make, {
                                                                                                                    animation: "leftRight",
                                                                                                                    src: Icons$BtsCore.editBlack
                                                                                                                  })
                                                                                                            })) : null, state.delete ? React.createElement("div", {
                                                                                                          style: {
                                                                                                            bottom: "-100%",
                                                                                                            position: "absolute",
                                                                                                            right: "0",
                                                                                                            transform: "translate(0px, 20px)"
                                                                                                          }
                                                                                                        }, React.createElement(IconButton$BtsCore.make, {
                                                                                                              padding: "6",
                                                                                                              disabled: state.showProgress,
                                                                                                              onClick: (function ($$event) {
                                                                                                                  return Curry._2(deleteForm, item.id, $$event);
                                                                                                                }),
                                                                                                              children: React.createElement(IconAction$BtsCore.make, {
                                                                                                                    animation: "leftRight",
                                                                                                                    src: Icons$BtsCore.deleteBlack
                                                                                                                  })
                                                                                                            })) : null))
                                                                                        }))
                                                                              }))
                                                                    })
                                                              }));
                                              }), state.items)
                                      })
                                })
                          }), React.createElement(BottomScroll$BtsCore.make, {
                            showBar: state.showItem,
                            disabled: state.showProgress,
                            onClick: clickScrollBar
                          }))
                }));
}

var make = Search;

export {
  reducer ,
  initialState ,
  positionRelative ,
  outsideCollections ,
  insideCollections ,
  displayStyle ,
  make ,
  
}
/*  Not a pure module */
