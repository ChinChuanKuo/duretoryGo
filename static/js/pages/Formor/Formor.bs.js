// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_array from "bs-platform/lib/es6/caml_array.js";
import * as ReactIntl from "react-intl";
import * as Data$BtsCore from "../../features/Data.bs.js";
import * as Path$BtsCore from "../../features/Path.bs.js";
import * as Icons$BtsCore from "../../material-ui/icon/Icons.bs.js";
import * as Button$BtsCore from "../../material-ui/core/Button/Button.bs.js";
import * as Status$BtsCore from "../../features/Status.bs.js";
import * as Switch$BtsCore from "../../material-ui/core/Switch/Switch.bs.js";
import * as Divider$BtsCore from "../../material-ui/core/Divider/Divider.bs.js";
import * as Tooltip$BtsCore from "../../material-ui/core/Tooltip/Tooltip.bs.js";
import * as Axiosapi$BtsCore from "../../features/Axiosapi.bs.js";
import * as GridItem$BtsCore from "../../material-ui/core/Grid/GridItem.bs.js";
import * as MenuIcon$BtsCore from "../../material-ui/core/MenuItem/MenuIcon.bs.js";
import * as Together$BtsCore from "../../styles/Together/Together.bs.js";
import * as ReasonReactRouter from "reason-react/src/ReasonReactRouter.js";
import * as IconAction$BtsCore from "../../material-ui/core/IconStyle/IconAction.bs.js";
import * as IconButton$BtsCore from "../../material-ui/core/IconButton/IconButton.bs.js";
import * as SelectMenu$BtsCore from "../../material-ui/core/Menu/SelectMenu.bs.js";
import * as Typography$BtsCore from "../../material-ui/core/Typography/Typography.bs.js";
import * as IconGeneral$BtsCore from "../../material-ui/core/IconStyle/IconGeneral.bs.js";
import * as ImageUpload$BtsCore from "../../example/Uploads/ImageUpload.bs.js";
import * as NewFacetube$BtsCore from "../../example/Facebook/NewFacetube.bs.js";
import * as SwitchColor$BtsCore from "../../controls/SwitchColor.bs.js";
import * as GridContainer$BtsCore from "../../material-ui/core/Grid/GridContainer.bs.js";
import * as IconAnimation$BtsCore from "../../controls/IconAnimation.bs.js";
import * as SelectOutline$BtsCore from "../../material-ui/core/Select/SelectOutline.bs.js";
import * as SelectPosition$BtsCore from "../../controls/SelectPosition.bs.js";
import * as BackgroundBoard$BtsCore from "../../example/Boards/BackgroundBoard.bs.js";
import * as SnackbarYoutube$BtsCore from "../../material-ui/core/Snackbar/SnackbarYoutube.bs.js";
import * as CardOrPaperBoard$BtsCore from "../../example/Boards/CardOrPaperBoard.bs.js";
import * as TextFieldStandard$BtsCore from "../../material-ui/core/TextField/TextFieldStandard.bs.js";
import * as TextFieldMultiline$BtsCore from "../../material-ui/core/TextField/TextFieldMultiline.bs.js";

((require('../../../scss/pages/Together/together.scss')));

function newitem(iid, opticonitems) {
  return [{
            iid: iid,
            showLine: false,
            title: "",
            showOut: false,
            showDrop: false,
            showFile: false,
            outValue: "radio",
            showShow: false,
            showCheck: false,
            showFilter: false,
            showMore: false,
            opticonitems: opticonitems,
            answeritems: [{
                id: 1,
                value: "",
                ansrDelete: false
              }],
            itemModify: false,
            itemDelete: false
          }];
}

function newansweritem(id) {
  return [{
            id: id,
            value: "",
            ansrDelete: false
          }];
}

function reducer(state, action) {
  if (typeof action === "number") {
    switch (action) {
      case /* SettingError */0 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: !state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingFormLoad */1 :
          return {
                  formLoad: !state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ActionShowProgress */2 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: !state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      
    }
  } else {
    switch (action.tag | 0) {
      case /* SettingFormWidth */0 :
          return {
                  formLoad: state.formLoad,
                  formWidth: action[0],
                  formHeight: action[1],
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ActionPermissItems */1 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: action[0],
                  update: action[1],
                  delete: action[2],
                  export: action[3],
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingFormItems */2 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: action[0],
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* AddForm */3 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.append(state.items, newitem(Caml_array.caml_array_get(state.items, state.items.length - 1 | 0).iid + 1 | 0, action[0])),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickBoardPaper */4 :
          var index = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          return {
                                  iid: item.iid,
                                  showLine: index === i,
                                  title: item.title,
                                  showOut: item.showOut,
                                  showDrop: item.showDrop,
                                  showFile: item.showFile,
                                  outValue: item.outValue,
                                  showShow: item.showShow,
                                  showCheck: item.showCheck,
                                  showFilter: item.showFilter,
                                  showMore: item.showMore,
                                  opticonitems: item.opticonitems,
                                  answeritems: item.answeritems,
                                  itemModify: item.itemModify,
                                  itemDelete: item.itemDelete
                                };
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ChangeTitle */5 :
          var index$1 = action[1];
          var value = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$1 === i) {
                            return {
                                    iid: item.iid,
                                    showLine: item.showLine,
                                    title: value,
                                    showOut: item.showOut,
                                    showDrop: item.showDrop,
                                    showFile: item.showFile,
                                    outValue: item.outValue,
                                    showShow: item.showShow,
                                    showCheck: item.showCheck,
                                    showFilter: item.showFilter,
                                    showMore: item.showMore,
                                    opticonitems: item.opticonitems,
                                    answeritems: item.answeritems,
                                    itemModify: true,
                                    itemDelete: item.itemDelete
                                  };
                          } else {
                            return item;
                          }
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowOut */6 :
          var index$2 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          return {
                                  iid: item.iid,
                                  showLine: item.showLine,
                                  title: item.title,
                                  showOut: index$2 === i ? !item.showOut : false,
                                  showDrop: item.showDrop,
                                  showFile: item.showFile,
                                  outValue: item.outValue,
                                  showShow: item.showShow,
                                  showCheck: item.showCheck,
                                  showFilter: item.showFilter,
                                  showMore: item.showMore,
                                  opticonitems: item.opticonitems,
                                  answeritems: item.answeritems,
                                  itemModify: item.itemModify,
                                  itemDelete: item.itemDelete
                                };
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowValue */7 :
          var index$3 = action[1];
          var outValue = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$3 === i) {
                            return {
                                    iid: item.iid,
                                    showLine: item.showLine,
                                    title: item.title,
                                    showOut: false,
                                    showDrop: item.showDrop,
                                    showFile: item.showFile,
                                    outValue: outValue,
                                    showShow: item.showShow,
                                    showCheck: item.showCheck,
                                    showFilter: item.showFilter,
                                    showMore: item.showMore,
                                    opticonitems: item.opticonitems,
                                    answeritems: item.answeritems,
                                    itemModify: true,
                                    itemDelete: item.itemDelete
                                  };
                          } else {
                            return item;
                          }
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ChangeText */8 :
          var index$4 = action[2];
          var rindex = action[1];
          var value$1 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$4 === i) {
                            return {
                                    iid: item.iid,
                                    showLine: item.showLine,
                                    title: item.title,
                                    showOut: item.showOut,
                                    showDrop: item.showDrop,
                                    showFile: item.showFile,
                                    outValue: item.outValue,
                                    showShow: item.showShow,
                                    showCheck: item.showCheck,
                                    showFilter: item.showFilter,
                                    showMore: item.showMore,
                                    opticonitems: item.opticonitems,
                                    answeritems: $$Array.mapi((function (ri, answeritem) {
                                            if (rindex === ri) {
                                              return {
                                                      id: answeritem.id,
                                                      value: value$1,
                                                      ansrDelete: answeritem.ansrDelete
                                                    };
                                            } else {
                                              return answeritem;
                                            }
                                          }), item.answeritems),
                                    itemModify: true,
                                    itemDelete: item.itemDelete
                                  };
                          } else {
                            return item;
                          }
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClearOption */9 :
          var index$5 = action[1];
          var rindex$1 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$5 === i) {
                            return {
                                    iid: item.iid,
                                    showLine: item.showLine,
                                    title: item.title,
                                    showOut: item.showOut,
                                    showDrop: item.showDrop,
                                    showFile: item.showFile,
                                    outValue: item.outValue,
                                    showShow: item.showShow,
                                    showCheck: item.showCheck,
                                    showFilter: item.showFilter,
                                    showMore: item.showMore,
                                    opticonitems: item.opticonitems,
                                    answeritems: $$Array.mapi((function (ri, answeritem) {
                                            if (rindex$1 === ri) {
                                              return {
                                                      id: answeritem.id,
                                                      value: answeritem.value,
                                                      ansrDelete: !answeritem.ansrDelete
                                                    };
                                            } else {
                                              return answeritem;
                                            }
                                          }), item.answeritems),
                                    itemModify: true,
                                    itemDelete: item.itemDelete
                                  };
                          } else {
                            return item;
                          }
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowMore */10 :
          var index$6 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$6 === i) {
                            return {
                                    iid: item.iid,
                                    showLine: item.showLine,
                                    title: item.title,
                                    showOut: item.showOut,
                                    showDrop: item.showDrop,
                                    showFile: item.showFile,
                                    outValue: item.outValue,
                                    showShow: item.showShow,
                                    showCheck: item.showCheck,
                                    showFilter: item.showFilter,
                                    showMore: !item.showMore,
                                    opticonitems: item.opticonitems,
                                    answeritems: item.answeritems,
                                    itemModify: item.itemModify,
                                    itemDelete: item.itemDelete
                                  };
                          } else {
                            return item;
                          }
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowItem */11 :
          var index$7 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$7 === i) {
                            return {
                                    iid: item.iid,
                                    showLine: item.showLine,
                                    title: item.title,
                                    showOut: item.showOut,
                                    showDrop: item.showDrop,
                                    showFile: item.showFile,
                                    outValue: item.outValue,
                                    showShow: !item.showShow,
                                    showCheck: item.showCheck,
                                    showFilter: item.showFilter,
                                    showMore: item.showMore,
                                    opticonitems: item.opticonitems,
                                    answeritems: item.answeritems,
                                    itemModify: true,
                                    itemDelete: item.itemDelete
                                  };
                          } else {
                            return item;
                          }
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* CheckItem */12 :
          var index$8 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$8 === i) {
                            return {
                                    iid: item.iid,
                                    showLine: item.showLine,
                                    title: item.title,
                                    showOut: item.showOut,
                                    showDrop: item.showDrop,
                                    showFile: item.showFile,
                                    outValue: item.outValue,
                                    showShow: !item.showCheck,
                                    showCheck: !item.showCheck,
                                    showFilter: item.showFilter,
                                    showMore: item.showMore,
                                    opticonitems: item.opticonitems,
                                    answeritems: item.answeritems,
                                    itemModify: true,
                                    itemDelete: item.itemDelete
                                  };
                          } else {
                            return item;
                          }
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* FilterItem */13 :
          var index$9 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$9 === i) {
                            return {
                                    iid: item.iid,
                                    showLine: item.showLine,
                                    title: item.title,
                                    showOut: item.showOut,
                                    showDrop: item.showDrop,
                                    showFile: item.showFile,
                                    outValue: item.outValue,
                                    showShow: item.showShow,
                                    showCheck: item.showCheck,
                                    showFilter: !item.showFilter,
                                    showMore: item.showMore,
                                    opticonitems: item.opticonitems,
                                    answeritems: item.answeritems,
                                    itemModify: true,
                                    itemDelete: item.itemDelete
                                  };
                          } else {
                            return item;
                          }
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* DeleteItem */14 :
          var index$10 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$10 === i) {
                            return {
                                    iid: item.iid,
                                    showLine: item.showLine,
                                    title: item.title,
                                    showOut: item.showOut,
                                    showDrop: item.showDrop,
                                    showFile: item.showFile,
                                    outValue: item.outValue,
                                    showShow: item.showShow,
                                    showCheck: item.showCheck,
                                    showFilter: item.showFilter,
                                    showMore: item.showMore,
                                    opticonitems: item.opticonitems,
                                    answeritems: item.answeritems,
                                    itemModify: true,
                                    itemDelete: !item.itemDelete
                                  };
                          } else {
                            return item;
                          }
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* AddItem */15 :
          var index$11 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$11 === i) {
                            return {
                                    iid: item.iid,
                                    showLine: item.showLine,
                                    title: item.title,
                                    showOut: item.showOut,
                                    showDrop: item.showDrop,
                                    showFile: item.showFile,
                                    outValue: item.outValue,
                                    showShow: item.showShow,
                                    showCheck: item.showCheck,
                                    showFilter: item.showFilter,
                                    showMore: item.showMore,
                                    opticonitems: item.opticonitems,
                                    answeritems: $$Array.append(item.answeritems, newansweritem(item.answeritems.length === 0 ? 1 : Caml_array.caml_array_get(Caml_array.caml_array_get(state.items, i).answeritems, item.answeritems.length - 1 | 0).id + 1 | 0)),
                                    itemModify: true,
                                    itemDelete: item.itemDelete
                                  };
                          } else {
                            return item;
                          }
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ActionSnackBar */16 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: state.items,
                  showYoutube: action[1],
                  youtubeText: action[0]
                };
      
    }
  }
}

var initialState_items = [];

var initialState = {
  formLoad: false,
  formWidth: 0,
  formHeight: 0,
  showProgress: true,
  error: false,
  insert: false,
  update: false,
  delete: false,
  export: false,
  items: initialState_items,
  showYoutube: false,
  youtubeText: ""
};

function Formor(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var barShowRestoreAction = function (youtubeText) {
    Curry._1(dispatch, /* ActionSnackBar */Block.__(16, [
            youtubeText,
            true
          ]));
    setTimeout((function (param) {
            return Curry._1(dispatch, /* ActionSnackBar */Block.__(16, [
                          "",
                          false
                        ]));
          }), 5000);
    
  };
  var searchAJax = function (param) {
    Axiosapi$BtsCore.Formor.search(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* SettingFormItems */Block.__(2, [response.data.items]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              } else {
                Curry._1(dispatch, /* SettingError */0);
                barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var permissAJax = function (param) {
    Axiosapi$BtsCore.Form.permiss(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              return Promise.resolve((Curry._1(dispatch, /* ActionPermissItems */Block.__(1, [
                                  response.data.insert,
                                  response.data.update,
                                  response.data.delete,
                                  response.data.export
                                ])), searchAJax(undefined)));
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  React.useEffect((function () {
          var match = state.formLoad;
          if (match) {
            return (function (param) {
                      console.log("action");
                      
                    });
          }
          Curry._1(dispatch, /* SettingFormLoad */1);
          Curry._1(dispatch, /* SettingFormWidth */Block.__(0, [
                  window.innerWidth,
                  window.innerHeight
                ]));
          var timeId = permissAJax(undefined);
          return (function (param) {
                    return timeId;
                  });
        }));
  var handleResize = function ($$event) {
    return Curry._1(dispatch, /* SettingFormWidth */Block.__(0, [
                  $$event.currentTarget.innerWidth,
                  $$event.currentTarget.innerHeight
                ]));
  };
  React.useEffect((function () {
          window.addEventListener("resize", handleResize, true);
          return (function (param) {
                    
                  });
        }), ([]));
  var insertForm = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */2);
          Axiosapi$BtsCore.Formor.insert(Data$BtsCore.iItemsData(state.items.filter((function (item) {
                              return item.itemModify === true;
                            })), localStorage.getItem("newid"))).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      sessionStorage.setItem("form", "saveSuccess");
                      tmp = ReasonReactRouter.push(Path$BtsCore.homePath);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var clickBoardPaper = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ClickBoardPaper */Block.__(4, [i]));
        }));
  var changeTitle = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeTitle */Block.__(5, [
                            value,
                            i
                          ]));
            });
        }));
  var showOut = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowOut */Block.__(6, [i]));
        }));
  var showValue = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ShowValue */Block.__(7, [
                            value,
                            i
                          ]));
            });
        }));
  var changeText = React.useCallback((function (value) {
          return (function (ri, i) {
              return Curry._1(dispatch, /* ChangeText */Block.__(8, [
                            value,
                            ri,
                            i
                          ]));
            });
        }));
  var clearOption = React.useCallback((function (ri) {
          return (function (i) {
              return Curry._1(dispatch, /* ClearOption */Block.__(9, [
                            ri,
                            i
                          ]));
            });
        }));
  var showMore = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowMore */Block.__(10, [i]));
        }));
  var showItem = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowItem */Block.__(11, [i]));
        }));
  var checkItem = React.useCallback((function (i) {
          return Curry._1(dispatch, /* CheckItem */Block.__(12, [i]));
        }));
  var filterItem = React.useCallback((function (i) {
          return Curry._1(dispatch, /* FilterItem */Block.__(13, [i]));
        }));
  var deleteItem = React.useCallback((function (i) {
          return Curry._1(dispatch, /* DeleteItem */Block.__(14, [i]));
        }));
  var addItem = React.useCallback((function (i) {
          return Curry._1(dispatch, /* AddItem */Block.__(15, [i]));
        }));
  return React.createElement(React.Fragment, undefined, React.createElement(NewFacetube$BtsCore.make, {
                  showProgress: state.showProgress,
                  error: state.error,
                  children: React.createElement(GridItem$BtsCore.make, {
                        style: Together$BtsCore.marginAuto,
                        top: "0",
                        right: "32",
                        bottom: "0",
                        left: "32",
                        xs: "12",
                        maxWidth: "770px",
                        children: React.createElement(GridContainer$BtsCore.make, {
                              direction: "column",
                              justify: "center",
                              alignItem: "stretch",
                              children: null
                            }, React.createElement(GridItem$BtsCore.make, {
                                  style: {
                                    position: "sticky",
                                    top: "0px",
                                    zIndex: "1000"
                                  },
                                  top: "0",
                                  right: "24",
                                  left: "24",
                                  xs: "auto",
                                  children: React.createElement(GridContainer$BtsCore.make, {
                                        direction: "row",
                                        justify: "around",
                                        alignItem: "center",
                                        children: null
                                      }, React.createElement(GridItem$BtsCore.make, {
                                            top: "0",
                                            right: "0",
                                            bottom: "0",
                                            left: "0",
                                            xs: "auto",
                                            children: null
                                          }), React.createElement(GridItem$BtsCore.make, {
                                            top: "0",
                                            right: "0",
                                            bottom: "0",
                                            left: "0",
                                            xs: "no",
                                            children: React.createElement(Button$BtsCore.make, {
                                                  disabled: state.showProgress,
                                                  onClick: insertForm,
                                                  children: null
                                                }, React.createElement(IconAction$BtsCore.make, {
                                                      animation: "leftRight",
                                                      src: Icons$BtsCore.saveWhite
                                                    }), React.createElement(ReactIntl.FormattedMessage, {
                                                      id: "save",
                                                      defaultMessage: "Save"
                                                    }))
                                          }))
                                }), $$Array.mapi((function (i, item) {
                                    var match = item.outValue;
                                    var tmp;
                                    var exit = 0;
                                    switch (match) {
                                      case "droplist" :
                                          tmp = React.createElement(GridContainer$BtsCore.make, {
                                                direction: "column",
                                                justify: "center",
                                                alignItem: "stretch",
                                                children: $$Array.mapi((function (ai, answeritem) {
                                                        return React.createElement(GridItem$BtsCore.make, {
                                                                    top: "0",
                                                                    right: "0",
                                                                    bottom: "6",
                                                                    left: "0",
                                                                    xs: "auto",
                                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                                          direction: "row",
                                                                          justify: "start",
                                                                          alignItem: "center",
                                                                          children: null
                                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                                              top: "0",
                                                                              right: "0",
                                                                              bottom: "0",
                                                                              left: "0",
                                                                              xs: "no",
                                                                              children: React.createElement(IconButton$BtsCore.make, {
                                                                                    padding: "4",
                                                                                    disabled: state.showProgress,
                                                                                    children: React.createElement(IconAction$BtsCore.make, {
                                                                                          animation: "leftRight",
                                                                                          src: Icons$BtsCore.radioButtonUncheckedBlack
                                                                                        })
                                                                                  })
                                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                                              top: "0",
                                                                              right: "6",
                                                                              bottom: "0",
                                                                              left: "0",
                                                                              xs: "auto",
                                                                              children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                                    top: "0",
                                                                                    placeholder: "Option",
                                                                                    value: answeritem.value,
                                                                                    disabled: state.showProgress || item.itemDelete || answeritem.ansrDelete,
                                                                                    onChange: (function ($$event) {
                                                                                        return Curry._3(changeText, $$event.target.value, ai, i);
                                                                                      }),
                                                                                    children: null
                                                                                  })
                                                                            }), item.showLine ? React.createElement(GridItem$BtsCore.make, {
                                                                                top: "0",
                                                                                right: "0",
                                                                                bottom: "0",
                                                                                left: "0",
                                                                                xs: "no",
                                                                                children: React.createElement(IconButton$BtsCore.make, {
                                                                                      padding: "4",
                                                                                      disabled: state.showProgress || item.itemDelete,
                                                                                      onClick: (function (param) {
                                                                                          return Curry._2(clearOption, ai, i);
                                                                                        }),
                                                                                      children: React.createElement(IconAction$BtsCore.make, {
                                                                                            animation: "circle",
                                                                                            src: answeritem.ansrDelete ? Icons$BtsCore.refreshBlack : Icons$BtsCore.clearWarn
                                                                                          })
                                                                                    })
                                                                              }) : null)
                                                                  });
                                                      }), item.answeritems)
                                              });
                                          break;
                                      case "collections" :
                                      case "image" :
                                          exit = 1;
                                          break;
                                      case "label" :
                                          tmp = React.createElement(Typography$BtsCore.make, {
                                                variant: "subtitle2",
                                                style: {
                                                  paddingRight: "6px",
                                                  paddingLeft: "6px"
                                                },
                                                noWrap: true,
                                                children: null
                                              });
                                          break;
                                      case "text" :
                                          tmp = React.createElement(TextFieldStandard$BtsCore.make, {
                                                width: "50",
                                                top: "0",
                                                left: "0",
                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                borderColor: "rgba(0,0,0,0.2)",
                                                disabled: true,
                                                children: null
                                              });
                                          break;
                                      case "textarea" :
                                          tmp = React.createElement(TextFieldMultiline$BtsCore.make, {
                                                top: "12",
                                                bottom: "0",
                                                left: "0",
                                                labelColor: "rgba(255,0,0,0.8)",
                                                borderTop: "10",
                                                borderBottom: "10",
                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                borderColor: "rgba(0,0,0,0.2)",
                                                rows: 3,
                                                disabled: true,
                                                children: null
                                              });
                                          break;
                                      case "textline" :
                                          tmp = React.createElement(TextFieldStandard$BtsCore.make, {
                                                top: "0",
                                                left: "0",
                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                borderColor: "rgba(0,0,0,0.2)",
                                                disabled: true,
                                                children: null
                                              });
                                          break;
                                      default:
                                        tmp = React.createElement(GridContainer$BtsCore.make, {
                                              direction: "column",
                                              justify: "center",
                                              alignItem: "stretch",
                                              children: $$Array.mapi((function (ai, answeritem) {
                                                      return React.createElement(GridItem$BtsCore.make, {
                                                                  top: "0",
                                                                  right: "0",
                                                                  bottom: "6",
                                                                  left: "0",
                                                                  xs: "auto",
                                                                  children: React.createElement(GridContainer$BtsCore.make, {
                                                                        direction: "row",
                                                                        justify: "start",
                                                                        alignItem: "center",
                                                                        children: null
                                                                      }, React.createElement(GridItem$BtsCore.make, {
                                                                            top: "0",
                                                                            right: "0",
                                                                            bottom: "0",
                                                                            left: "0",
                                                                            xs: "no",
                                                                            children: React.createElement(IconButton$BtsCore.make, {
                                                                                  padding: "4",
                                                                                  disabled: state.showProgress,
                                                                                  children: React.createElement(IconAction$BtsCore.make, {
                                                                                        animation: "leftRight",
                                                                                        src: IconAnimation$BtsCore.answerIcon(item.outValue, false)
                                                                                      })
                                                                                })
                                                                          }), React.createElement(GridItem$BtsCore.make, {
                                                                            top: "0",
                                                                            right: "6",
                                                                            bottom: "0",
                                                                            left: "0",
                                                                            xs: "auto",
                                                                            children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                                  top: "0",
                                                                                  placeholder: "Option",
                                                                                  value: answeritem.value,
                                                                                  disabled: state.showProgress || item.itemDelete,
                                                                                  onChange: (function ($$event) {
                                                                                      return Curry._3(changeText, $$event.target.value, ai, i);
                                                                                    }),
                                                                                  children: null
                                                                                })
                                                                          }), item.showLine ? React.createElement(GridItem$BtsCore.make, {
                                                                              top: "0",
                                                                              right: "0",
                                                                              bottom: "0",
                                                                              left: "0",
                                                                              xs: "no",
                                                                              children: React.createElement(IconButton$BtsCore.make, {
                                                                                    padding: "4",
                                                                                    disabled: state.showProgress || item.itemDelete,
                                                                                    onClick: (function (param) {
                                                                                        return Curry._2(clearOption, ai, i);
                                                                                      }),
                                                                                    children: React.createElement(IconAction$BtsCore.make, {
                                                                                          animation: "circle",
                                                                                          src: answeritem.ansrDelete ? Icons$BtsCore.refreshBlack : Icons$BtsCore.clearWarn
                                                                                        })
                                                                                  })
                                                                            }) : null)
                                                                });
                                                    }), item.answeritems)
                                            });
                                    }
                                    if (exit === 1) {
                                      tmp = React.createElement(ImageUpload$BtsCore.make, {
                                            webLoad: state.showProgress,
                                            showDrop: item.showDrop,
                                            showFile: item.showFile,
                                            disabled: true
                                          });
                                    }
                                    var tmp$1;
                                    if (item.showLine) {
                                      var tmp$2;
                                      if (item.showMore && !item.itemDelete) {
                                        var match$1 = item.outValue;
                                        var tmp$3;
                                        switch (match$1) {
                                          case "checkbox" :
                                              tmp$3 = React.createElement(MenuIcon$BtsCore.make, {
                                                    top: "0",
                                                    right: "8",
                                                    bottom: "0",
                                                    left: "8",
                                                    disablePadding: true,
                                                    topLeft: "12",
                                                    topRight: "12",
                                                    bottomRight: "12",
                                                    bottomLeft: "12",
                                                    children: /* tuple */[
                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                            src: Icons$BtsCore.doneSuccessful
                                                          }),
                                                      React.createElement(ReactIntl.FormattedMessage, {
                                                            id: "desc",
                                                            defaultMessage: "Desc"
                                                          })
                                                    ]
                                                  });
                                              break;
                                          case "radio" :
                                              tmp$3 = React.createElement(React.Fragment, undefined, React.createElement(MenuIcon$BtsCore.make, {
                                                        top: "0",
                                                        right: "8",
                                                        bottom: "0",
                                                        left: "8",
                                                        disablePadding: true,
                                                        topLeft: "12",
                                                        topRight: "12",
                                                        bottomRight: "12",
                                                        bottomLeft: "12",
                                                        children: /* tuple */[
                                                          React.createElement(IconGeneral$BtsCore.make, {
                                                                src: Icons$BtsCore.doneSuccessful
                                                              }),
                                                          React.createElement(ReactIntl.FormattedMessage, {
                                                                id: "desc",
                                                                defaultMessage: "Desc"
                                                              })
                                                        ]
                                                      }), React.createElement(MenuIcon$BtsCore.make, {
                                                        top: "0",
                                                        right: "8",
                                                        bottom: "0",
                                                        left: "8",
                                                        disablePadding: true,
                                                        topLeft: "12",
                                                        topRight: "12",
                                                        bottomRight: "12",
                                                        bottomLeft: "12",
                                                        children: /* tuple */[
                                                          React.createElement(IconGeneral$BtsCore.make, {
                                                                src: Icons$BtsCore.doneSuccessful
                                                              }),
                                                          React.createElement(ReactIntl.FormattedMessage, {
                                                                id: "Formor.relevant",
                                                                defaultMessage: "Relevant"
                                                              })
                                                        ]
                                                      }));
                                              break;
                                          default:
                                            tmp$3 = React.createElement(MenuIcon$BtsCore.make, {
                                                  top: "0",
                                                  right: "8",
                                                  bottom: "0",
                                                  left: "8",
                                                  disablePadding: true,
                                                  topLeft: "12",
                                                  topRight: "12",
                                                  bottomRight: "12",
                                                  bottomLeft: "12",
                                                  children: /* tuple */[
                                                    React.createElement(IconGeneral$BtsCore.make, {
                                                          src: Icons$BtsCore.doneSuccessful
                                                        }),
                                                    React.createElement(ReactIntl.FormattedMessage, {
                                                          id: "desc",
                                                          defaultMessage: "Desc"
                                                        })
                                                  ]
                                                });
                                        }
                                        tmp$2 = React.createElement(SelectMenu$BtsCore.make, {
                                              top: "100%",
                                              right: "0",
                                              transform: "translate(0, -100%)",
                                              minWidth: "256px",
                                              maxHeight: "280",
                                              minHeight: "0",
                                              topLeft: "12",
                                              topRight: "12",
                                              bottomRight: "12",
                                              bottomLeft: "12",
                                              paddingRight: "8",
                                              paddingLeft: "8",
                                              children: tmp$3
                                            });
                                      } else {
                                        tmp$2 = null;
                                      }
                                      var match$2 = item.outValue;
                                      var tmp$4;
                                      var exit$1 = 0;
                                      switch (match$2) {
                                        case "checkbox" :
                                        case "droplist" :
                                        case "radio" :
                                            exit$1 = 1;
                                            break;
                                        default:
                                          tmp$4 = null;
                                      }
                                      if (exit$1 === 1) {
                                        tmp$4 = React.createElement(GridItem$BtsCore.make, {
                                              top: "0",
                                              right: "0",
                                              bottom: "0",
                                              left: "0",
                                              xs: "no",
                                              children: React.createElement(IconButton$BtsCore.make, {
                                                    padding: "8",
                                                    disabled: state.showProgress || item.itemDelete,
                                                    onClick: (function (param) {
                                                        return Curry._1(addItem, i);
                                                      }),
                                                    children: null
                                                  }, React.createElement(Tooltip$BtsCore.make, {
                                                        location: "top",
                                                        backgroundColor: "rgba(255,0,0,0.8)",
                                                        children: React.createElement(ReactIntl.FormattedMessage, {
                                                              id: "add",
                                                              defaultMessage: "Add"
                                                            })
                                                      }), React.createElement(IconAction$BtsCore.make, {
                                                        animation: "circle",
                                                        src: Icons$BtsCore.addBlack
                                                      }))
                                            });
                                      }
                                      tmp$1 = React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                xs: "auto",
                                                children: React.createElement(Divider$BtsCore.make, { })
                                              }), React.createElement(GridItem$BtsCore.make, {
                                                top: "0",
                                                right: "0",
                                                bottom: "0",
                                                left: "0",
                                                xs: "auto",
                                                children: React.createElement(GridContainer$BtsCore.make, {
                                                      direction: "rowReverse",
                                                      justify: "start",
                                                      alignItem: "center",
                                                      children: null
                                                    }, React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          right: "0",
                                                          bottom: "0",
                                                          left: "0",
                                                          xs: "no",
                                                          children: null
                                                        }, React.createElement(IconButton$BtsCore.make, {
                                                              padding: "8",
                                                              disabled: state.showProgress || item.itemDelete,
                                                              onClick: (function (param) {
                                                                  return Curry._1(showMore, i);
                                                                }),
                                                              children: null
                                                            }, React.createElement(Tooltip$BtsCore.make, {
                                                                  location: "top",
                                                                  backgroundColor: "rgba(255,0,0,0.8)",
                                                                  children: React.createElement(ReactIntl.FormattedMessage, {
                                                                        id: "more",
                                                                        defaultMessage: "More"
                                                                      })
                                                                }), React.createElement(IconAction$BtsCore.make, {
                                                                  animation: "circle",
                                                                  src: Icons$BtsCore.moreVertBlack
                                                                })), tmp$2, React.createElement(BackgroundBoard$BtsCore.make, {
                                                              showBackground: item.showMore,
                                                              backgroundColor: "transparent",
                                                              onClick: (function (param) {
                                                                  return Curry._1(showMore, i);
                                                                })
                                                            })), React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          right: "0",
                                                          bottom: "0",
                                                          left: "6",
                                                          xs: "no",
                                                          children: React.createElement(Switch$BtsCore.make, {
                                                                right: "0",
                                                                checked: item.showShow,
                                                                circleColor: SwitchColor$BtsCore.circle(item.showShow),
                                                                linearColor: SwitchColor$BtsCore.linear(item.showShow),
                                                                fontColor: SwitchColor$BtsCore.font(item.showShow),
                                                                disabled: state.showProgress || item.itemDelete,
                                                                onClick: (function (param) {
                                                                    return Curry._1(showItem, i);
                                                                  }),
                                                                children: React.createElement(ReactIntl.FormattedMessage, {
                                                                      id: "Formor.show",
                                                                      defaultMessage: "Show"
                                                                    })
                                                              })
                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          right: "0",
                                                          bottom: "0",
                                                          left: "6",
                                                          xs: "no",
                                                          children: React.createElement(Switch$BtsCore.make, {
                                                                right: "0",
                                                                checked: item.showCheck,
                                                                circleColor: SwitchColor$BtsCore.circle(item.showCheck),
                                                                linearColor: SwitchColor$BtsCore.linear(item.showCheck),
                                                                fontColor: SwitchColor$BtsCore.font(item.showCheck),
                                                                disabled: state.showProgress || item.itemDelete,
                                                                onClick: (function (param) {
                                                                    return Curry._1(checkItem, i);
                                                                  }),
                                                                children: React.createElement(ReactIntl.FormattedMessage, {
                                                                      id: "need",
                                                                      defaultMessage: "Need"
                                                                    })
                                                              })
                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          right: "0",
                                                          bottom: "0",
                                                          left: "0",
                                                          xs: "no",
                                                          children: React.createElement(Switch$BtsCore.make, {
                                                                right: "0",
                                                                checked: item.showFilter,
                                                                circleColor: SwitchColor$BtsCore.circle(item.showFilter),
                                                                linearColor: SwitchColor$BtsCore.linear(item.showFilter),
                                                                fontColor: SwitchColor$BtsCore.font(item.showFilter),
                                                                disabled: state.showProgress || item.itemDelete,
                                                                onClick: (function (param) {
                                                                    return Curry._1(filterItem, i);
                                                                  }),
                                                                children: React.createElement(ReactIntl.FormattedMessage, {
                                                                      id: "Formor.filter",
                                                                      defaultMessage: "Filter"
                                                                    })
                                                              })
                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                          style: {
                                                            borderRight: "1px solid rgba(0,0,0,0.12)",
                                                            marginRight: "12px"
                                                          },
                                                          left: "0",
                                                          xs: "no",
                                                          children: null
                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          right: "0",
                                                          bottom: "0",
                                                          left: "0",
                                                          xs: "no",
                                                          children: React.createElement(IconButton$BtsCore.make, {
                                                                padding: "8",
                                                                disabled: state.showProgress,
                                                                onClick: (function (param) {
                                                                    return Curry._1(deleteItem, i);
                                                                  }),
                                                                children: null
                                                              }, React.createElement(Tooltip$BtsCore.make, {
                                                                    location: "top",
                                                                    backgroundColor: "rgba(255,0,0,0.8)",
                                                                    children: React.createElement(ReactIntl.FormattedMessage, {
                                                                          id: item.itemDelete ? "refresh" : "deleted",
                                                                          defaultMessage: item.itemDelete ? "Refresh" : "Deleted"
                                                                        })
                                                                  }), React.createElement(IconAction$BtsCore.make, {
                                                                    animation: "leftRight",
                                                                    src: item.itemDelete ? Icons$BtsCore.refreshBlack : Icons$BtsCore.deleteBlack
                                                                  }))
                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          right: "0",
                                                          bottom: "0",
                                                          left: "0",
                                                          xs: "no",
                                                          children: React.createElement(IconButton$BtsCore.make, {
                                                                padding: "8",
                                                                disabled: state.showProgress || item.itemDelete,
                                                                children: null
                                                              }, React.createElement(Tooltip$BtsCore.make, {
                                                                    location: "top",
                                                                    backgroundColor: "rgba(255,0,0,0.8)",
                                                                    children: React.createElement(ReactIntl.FormattedMessage, {
                                                                          id: "copy",
                                                                          defaultMessage: "Copy"
                                                                        })
                                                                  }), React.createElement(IconAction$BtsCore.make, {
                                                                    animation: "leftRight",
                                                                    src: Icons$BtsCore.fileCopyBlack
                                                                  }))
                                                        }), tmp$4)
                                              }));
                                    } else {
                                      tmp$1 = null;
                                    }
                                    return React.createElement(GridItem$BtsCore.make, {
                                                top: "0",
                                                right: "24",
                                                left: "24",
                                                xs: "auto",
                                                children: React.createElement(CardOrPaperBoard$BtsCore.make, {
                                                      onClick: (function (param) {
                                                          return Curry._1(clickBoardPaper, i);
                                                        }),
                                                      showLine: item.showLine,
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "column",
                                                            justify: "start",
                                                            alignItem: "stretch",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                bottom: "0",
                                                                xs: "auto",
                                                                children: React.createElement(GridContainer$BtsCore.make, {
                                                                      direction: "row",
                                                                      justify: "center",
                                                                      alignItem: "center",
                                                                      children: null
                                                                    }, React.createElement(GridItem$BtsCore.make, {
                                                                          top: "0",
                                                                          right: "0",
                                                                          bottom: "0",
                                                                          left: "0",
                                                                          xs: "auto",
                                                                          children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                                top: "0",
                                                                                right: "0",
                                                                                left: "0",
                                                                                value: item.title,
                                                                                disabled: state.showProgress || item.itemDelete,
                                                                                onChange: (function ($$event) {
                                                                                    return Curry._2(changeTitle, $$event.target.value, i);
                                                                                  }),
                                                                                children: null
                                                                              })
                                                                        }), item.showLine ? React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                                                top: "0",
                                                                                right: "0",
                                                                                bottom: "0",
                                                                                left: "0",
                                                                                xs: "no",
                                                                                children: React.createElement(IconButton$BtsCore.make, {
                                                                                      padding: "10",
                                                                                      disabled: state.showProgress || item.itemDelete,
                                                                                      children: React.createElement(IconAction$BtsCore.make, {
                                                                                            animation: "leftRight",
                                                                                            src: Icons$BtsCore.collectionsBlack
                                                                                          })
                                                                                    })
                                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                                top: "0",
                                                                                right: "0",
                                                                                bottom: "0",
                                                                                left: "0",
                                                                                width: "156px",
                                                                                xs: "no",
                                                                                children: null
                                                                              }, React.createElement(SelectOutline$BtsCore.make, {
                                                                                    top: "0",
                                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                                    value: item.outValue,
                                                                                    disabled: state.showProgress || item.itemDelete,
                                                                                    onClick: (function (param) {
                                                                                        return Curry._1(showOut, i);
                                                                                      }),
                                                                                    children: /* tuple */[
                                                                                      item.showOut && !item.itemDelete ? React.createElement(SelectMenu$BtsCore.make, {
                                                                                              top: SelectPosition$BtsCore.Position.top(i),
                                                                                              transform: SelectPosition$BtsCore.Position.transform(i),
                                                                                              width: "100%",
                                                                                              maxHeight: "280",
                                                                                              minHeight: "0",
                                                                                              topLeft: "12",
                                                                                              topRight: "12",
                                                                                              bottomRight: "12",
                                                                                              bottomLeft: "12",
                                                                                              paddingRight: "8",
                                                                                              paddingLeft: "8",
                                                                                              children: $$Array.map((function (opticonitem) {
                                                                                                      return React.createElement(MenuIcon$BtsCore.make, {
                                                                                                                  top: "0",
                                                                                                                  right: "8",
                                                                                                                  bottom: "0",
                                                                                                                  left: "8",
                                                                                                                  disablePadding: opticonitem.opticonPadding,
                                                                                                                  topLeft: "12",
                                                                                                                  topRight: "12",
                                                                                                                  bottomRight: "12",
                                                                                                                  bottomLeft: "12",
                                                                                                                  onClick: (function (param) {
                                                                                                                      return Curry._2(showValue, opticonitem.value, i);
                                                                                                                    }),
                                                                                                                  children: /* tuple */[
                                                                                                                    React.createElement(IconGeneral$BtsCore.make, {
                                                                                                                          src: opticonitem.icon
                                                                                                                        }),
                                                                                                                    opticonitem.value
                                                                                                                  ]
                                                                                                                });
                                                                                                    }), item.opticonitems)
                                                                                            }) : null,
                                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showOut),
                                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                                          })
                                                                                    ]
                                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                                    showBackground: item.showOut,
                                                                                    backgroundColor: "transparent",
                                                                                    onClick: (function (param) {
                                                                                        return Curry._1(showOut, i);
                                                                                      })
                                                                                  }))) : null)
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                bottom: "0",
                                                                xs: "auto",
                                                                children: tmp
                                                              }), tmp$1)
                                                    })
                                              });
                                  }), state.items))
                      })
                }), React.createElement(SnackbarYoutube$BtsCore.make, {
                  showYoutube: state.showYoutube,
                  position: "bottomLeft",
                  children: /* tuple */[
                    React.createElement("span", undefined, state.youtubeText),
                    null
                  ]
                }));
}

var make = Formor;

export {
  newitem ,
  newansweritem ,
  reducer ,
  initialState ,
  make ,
  
}
/*  Not a pure module */
